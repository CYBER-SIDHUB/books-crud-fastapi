name: Deploy to Kubernetes

on:
  push:
    branches:
      - 'master'  # Trigger the workflow on pushes to the master branch
      
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and push the Docker image
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="siddmi0407/my-python-app:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # Set up kubectl
      - name: Set up Kubernetes Configuration
        run: |
          mkdir -p ~/.minikube/profiles/minikube
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CLIENT_CERT }}" | base64 --decode > ~/.minikube/profiles/minikube/client.crt
          echo "${{ secrets.KUBE_CLIENT_KEY }}" | base64 --decode > ~/.minikube/profiles/minikube/client.key
          echo "${{ secrets.KUBE_CA_CERT }}" | base64 --decode > ~/.minikube/ca.crt
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > ~/.kube/config
          sed -i 's|https://192.168.49.2:8443|https://e95e-2405-201-303c-4069-da14-9d4f-58aa-624.ngrok-free.app|g' ~/.kube/config
          chmod 600 ~/.minikube/profiles/minikube/client.crt
          chmod 600 ~/.minikube/profiles/minikube/client.key
          chmod 600 ~/.minikube/ca.crt
          chmod 600 ~/.kube/config
      
      - name: Test Kubernetes Connection
        run: | 
          kubectl get nodes

      # Deploy to Kubernetes (Stage)
      - name: Deploy to Stage Namespace
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      # Deploy to Kubernetes (Production)
      - name: Deploy to Production Namespace
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          kubectl config set-context --current --namespace=production
          kubectl apply -f deployment-prod.yaml
          kubectl apply -f service-prod.yaml
